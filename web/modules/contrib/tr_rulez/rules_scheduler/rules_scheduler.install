<?php

/**
 * @file
 * Install, update and uninstall functions for the Rules Scheduler module.
 */

/**
 * Implements hook_schema().
 */
function rules_scheduler_schema() {
  $schema['rules_scheduler'] = [
    'description' => 'Stores scheduled tasks.',
    'fields' => [
      'tid' => [
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => "The scheduled task's id.",
      ],
      'config' => [
        'type' => 'varchar',
        'length' => '64',
        'default' => '',
        'not null' => TRUE,
        'description' => "The scheduled configuration's name.",
      ],
      'date' => [
        'description' => 'The Unix timestamp of when the task is to be scheduled.',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'data' => [
        'type' => 'blob',
        'size' => 'big',
        'not null' => FALSE,
        'serialize' => TRUE,
        'description' => 'The whole, serialized evaluation data.',
      ],
      'identifier' => [
        'type' => 'varchar',
        'length' => '255',
        'default' => '',
        'not null' => FALSE,
        'description' => 'The user defined string identifying this task.',
      ],
      'handler' => [
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
        'description' => 'The fully-qualified class name of the queue item handler.',
      ],
    ],
    'primary key' => ['tid'],
    'indexes' => [
      'date' => ['date'],
    ],
    'unique key' => [
      'id' => ['config', 'identifier'],
    ],
  ];

  return $schema;
}

/**
 * Implements hook_install().
 */
function rules_scheduler_install() {
  // Create a reliable queue to hold scheduled tasks.
  $queue = \Drupal::queue('rules_scheduler_tasks', TRUE);
  $queue->createQueue();
}

/**
 * Implements hook_uninstall().
 */
function rules_scheduler_uninstall() {
  // Clean up after ourselves by deleting the queue and all items in it.
  $queue = \Drupal::queue('rules_scheduler_tasks');
  $queue->deleteQueue();
}
